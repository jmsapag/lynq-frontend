#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running pre-commit formatting...${NC}"

# Check if there are staged files
if [ -z "$(git diff --cached --name-only)" ]; then
    echo -e "${RED}No staged files found. Please stage your changes first.${NC}"
    exit 1
fi

# Run formatting and capture files that were changed
echo -e "${YELLOW}Running formatter...${NC}"
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx|json|css|scss|md)$')

if [ -n "$STAGED_FILES" ]; then
    # Format the staged files
    npm run format
    
    # Check if formatting made any changes
    FORMATTED_FILES=$(git diff --name-only $STAGED_FILES)
    
    if [ -n "$FORMATTED_FILES" ]; then
        echo -e "${YELLOW}Formatting changes detected. Auto-staging formatted files...${NC}"
        
        # Add the formatted files back to staging
        for file in $FORMATTED_FILES; do
            if echo "$STAGED_FILES" | grep -q "$file"; then
                git add "$file"
                echo -e "${GREEN}Added formatted file: $file${NC}"
            fi
        done
        
        echo -e "${GREEN}Formatted files have been auto-staged.${NC}"
    else
        echo -e "${GREEN}No formatting changes needed.${NC}"
    fi
else
    echo -e "${YELLOW}No formattable files staged.${NC}"
fi

echo -e "${GREEN}Pre-commit formatting completed! âœ…${NC}"
